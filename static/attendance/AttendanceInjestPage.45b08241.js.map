{"mappings":"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","sources":["<anon>","src/pages/AttendanceInjestPage.jsx","src/repository/fetchAttendanceData.js","src/repository/bulkMarkAttendance.js"],"sourcesContent":["\nfunction $parcel$defineInteropFlag(a) {\n  Object.defineProperty(a, '__esModule', {value: true, configurable: true});\n}\n\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\n\n      var $parcel$global = globalThis;\n    var parcelRequire = $parcel$global[\"parcelRequire2e1e\"];\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"lKraE\", function(module, exports) {\n\n$parcel$defineInteropFlag(module.exports);\n\n$parcel$export(module.exports, \"default\", () => $a9bd98b75d7ae2c5$export$2e2bcd8739ae039);\n\nvar $ayMG0 = parcelRequire(\"ayMG0\");\n\nvar $acw62 = parcelRequire(\"acw62\");\n\nvar $jEyqx = parcelRequire(\"jEyqx\");\n\nvar $8Qx3l = parcelRequire(\"8Qx3l\");\n\nvar $br3ru = parcelRequire(\"br3ru\");\n\nvar $aphAM = parcelRequire(\"aphAM\");\n\nvar $aSXNm = parcelRequire(\"aSXNm\");\nconst $a9bd98b75d7ae2c5$var$StatusToAttendanceMap = {\n    1: \"Present\",\n    0: \"Absent\",\n    P: \"Present\",\n    A: \"Absent\",\n    p: \"Present\",\n    a: \"Absent\",\n    TRUE: \"Present\",\n    FALSE: \"Absent\"\n};\nconst $a9bd98b75d7ae2c5$var$AttendanceInjestPage = ()=>{\n    const { subjectClassPK: subjectClassPK } = (0, $aphAM.useParams)();\n    const [mailStatus, setMailStatus] = (0, $acw62.useState)([]);\n    const mailInputRef = (0, $acw62.useRef)(null);\n    const attendanceStatusInputRef = (0, $acw62.useRef)(null);\n    const [inputError, setInputError] = (0, $acw62.useState)(\"\");\n    const [uploading, setUploading] = (0, $acw62.useState)(false);\n    const [serverAttendance, setServerAttendance] = (0, $acw62.useState)({});\n    async function fetchServerAttendance() {\n        const { all_attendance: all_attendance } = await (0, $br3ru.default)(subjectClassPK);\n        const attendance = {};\n        for (let { mail: mail, status: status } of all_attendance)attendance[mail] = status;\n        setServerAttendance(attendance);\n        return attendance;\n    }\n    (0, $acw62.useEffect)(()=>{\n        fetchServerAttendance();\n    }, []);\n    async function handelUploadPressed() {\n        setUploading(true);\n        const request = mailStatus.map(({ mail: mail, status: status })=>{\n            return {\n                mail: mail,\n                status: status.toLowerCase()\n            };\n        });\n        (0, $aSXNm.default)(subjectClassPK, request).then(async ()=>{\n            setUploading(false);\n            await fetchServerAttendance();\n        }).catch((error)=>{\n            console.log(error);\n            setUploading(false);\n        });\n    }\n    function createZippedMailStatus(emails, statuses, serverAttendance) {\n        const zipped = emails.map((mail, i)=>{\n            mail = mail.replace(\"@ms.sst.scaler.com\", \"@sst.scaler.com\");\n            const status = getStatusFromRaw(statuses[i]);\n            const serverStatus = serverAttendance[mail];\n            return {\n                mail: mail,\n                status: status,\n                serverStatus: serverStatus\n            };\n        });\n        return zipped;\n    }\n    function updateFromInput() {\n        const emails = mailInputRef.current.value.trim().split(\"\\n\");\n        const statuses = attendanceStatusInputRef.current.value.trim().split(\"\\n\");\n        if (emails.length !== statuses.length) {\n            setInputError(\"Length mismatch\");\n            return;\n        } else setInputError(\"\");\n        if (emails.length === 1 && emails[0] === \"\") {\n            emails.pop();\n            statuses.pop();\n        }\n        const zipped = createZippedMailStatus(emails, statuses, serverAttendance);\n        setMailStatus(zipped);\n    }\n    (0, $acw62.useEffect)(updateFromInput, [\n        serverAttendance\n    ]);\n    function getStatusFromRaw(value) {\n        return $a9bd98b75d7ae2c5$var$StatusToAttendanceMap[value];\n    }\n    function countStatuses() {\n        let presentCount = 0;\n        let absentCount = 0;\n        let unknownCount = 0;\n        for (let { status: status } of mailStatus){\n            if (status === \"Present\") presentCount++;\n            else if (status === \"Absent\") absentCount++;\n            else unknownCount++;\n        }\n        return {\n            presentCount: presentCount,\n            absentCount: absentCount,\n            unknownCount: unknownCount\n        };\n    }\n    const { presentCount: presentCount, absentCount: absentCount, unknownCount: unknownCount } = countStatuses();\n    const allKnownMails = mailStatus.filter(({ serverStatus: serverStatus })=>!serverStatus).length === 0;\n    const uploadDisabled = uploading || mailStatus.length === 0 || inputError.length > 0 || !allKnownMails;\n    return /*#__PURE__*/ (0, $ayMG0.jsxs)(\"div\", {\n        className: \"flex flex-col gap-8 p-8 h-full\",\n        children: [\n            /*#__PURE__*/ (0, $ayMG0.jsxs)(\"div\", {\n                className: \"flex justify-evenly h-40\",\n                children: [\n                    /*#__PURE__*/ (0, $ayMG0.jsx)(\"textarea\", {\n                        ref: mailInputRef,\n                        rows: 5,\n                        className: \"border bg-gray-100 w-2/5\",\n                        placeholder: \"Paste emails from gsheet here\",\n                        onChange: updateFromInput\n                    }),\n                    /*#__PURE__*/ (0, $ayMG0.jsx)(\"textarea\", {\n                        ref: attendanceStatusInputRef,\n                        rows: 5,\n                        className: \"border bg-gray-100 1/5\",\n                        placeholder: \"Paste attendance from gsheet here\",\n                        onChange: updateFromInput\n                    }),\n                    /*#__PURE__*/ (0, $ayMG0.jsx)(\"div\", {\n                        children: /*#__PURE__*/ (0, $ayMG0.jsxs)(\"button\", {\n                            disabled: uploadDisabled,\n                            onClick: handelUploadPressed,\n                            type: \"button\",\n                            className: `px-8 py-3 rounded text-white bg-blue-700 ${!uploadDisabled ? \"hover:bg-blue-800\" : \"bg-gray-500\"}`,\n                            children: [\n                                uploading ? /*#__PURE__*/ (0, $ayMG0.jsx)((0, $jEyqx.FontAwesomeIcon), {\n                                    icon: (0, $8Qx3l.faSpinner),\n                                    spin: true,\n                                    size: \"1x\",\n                                    color: \"white\"\n                                }) : /*#__PURE__*/ (0, $ayMG0.jsx)((0, $jEyqx.FontAwesomeIcon), {\n                                    icon: (0, $8Qx3l.faUpload),\n                                    size: \"1x\",\n                                    color: \"white\"\n                                }),\n                                \"Upload\"\n                            ]\n                        })\n                    })\n                ]\n            }),\n            inputError && /*#__PURE__*/ (0, $ayMG0.jsx)(\"div\", {\n                className: \"text-red-500\",\n                children: inputError\n            }),\n            /*#__PURE__*/ (0, $ayMG0.jsxs)(\"table\", {\n                className: \"w-full mt-8 text-left bg-white border border-gray-300\",\n                children: [\n                    /*#__PURE__*/ (0, $ayMG0.jsx)(\"thead\", {\n                        className: \"bg-gray-200\",\n                        children: /*#__PURE__*/ (0, $ayMG0.jsxs)(\"tr\", {\n                            className: \"[&>*]:py-2\",\n                            children: [\n                                /*#__PURE__*/ (0, $ayMG0.jsx)(\"th\", {\n                                    children: \"#\"\n                                }),\n                                /*#__PURE__*/ (0, $ayMG0.jsxs)(\"th\", {\n                                    children: [\n                                        \"Emails: (\",\n                                        mailStatus.length,\n                                        \")\"\n                                    ]\n                                }),\n                                /*#__PURE__*/ (0, $ayMG0.jsxs)(\"th\", {\n                                    className: \"flex flex-col\",\n                                    children: [\n                                        /*#__PURE__*/ (0, $ayMG0.jsxs)(\"span\", {\n                                            children: [\n                                                \"Attendances: (\",\n                                                mailStatus.length,\n                                                \")\"\n                                            ]\n                                        }),\n                                        /*#__PURE__*/ (0, $ayMG0.jsxs)(\"div\", {\n                                            className: \"flex flex-wrap gap-4\",\n                                            children: [\n                                                /*#__PURE__*/ (0, $ayMG0.jsxs)(\"span\", {\n                                                    children: [\n                                                        presentCount,\n                                                        \" Present\"\n                                                    ]\n                                                }),\n                                                /*#__PURE__*/ (0, $ayMG0.jsxs)(\"span\", {\n                                                    children: [\n                                                        absentCount,\n                                                        \" Absent\"\n                                                    ]\n                                                }),\n                                                unknownCount > 0 && /*#__PURE__*/ (0, $ayMG0.jsxs)(\"span\", {\n                                                    children: [\n                                                        unknownCount,\n                                                        \" Unknown\"\n                                                    ]\n                                                })\n                                            ]\n                                        })\n                                    ]\n                                }),\n                                /*#__PURE__*/ (0, $ayMG0.jsx)(\"th\", {\n                                    children: \"Server Status\"\n                                })\n                            ]\n                        })\n                    }),\n                    /*#__PURE__*/ (0, $ayMG0.jsx)(\"tbody\", {\n                        className: \"overflow-y-auto\",\n                        children: mailStatus.map(({ mail: mail, status: status, serverStatus: serverStatus }, index)=>{\n                            let style = index % 2 === 0 ? \"bg-gray-100\" : \"bg-white\";\n                            if (!serverStatus) style = \"bg-red-400\";\n                            else if (status === serverStatus) style = \"bg-green-400\";\n                            else style = \"bg-yellow-400\";\n                            return /*#__PURE__*/ (0, $ayMG0.jsxs)(\"tr\", {\n                                className: style,\n                                children: [\n                                    /*#__PURE__*/ (0, $ayMG0.jsx)(\"td\", {\n                                        children: index + 1\n                                    }),\n                                    /*#__PURE__*/ (0, $ayMG0.jsx)(\"td\", {\n                                        className: \"py-2\",\n                                        children: mail\n                                    }),\n                                    /*#__PURE__*/ (0, $ayMG0.jsx)(\"td\", {\n                                        className: \"py-2\",\n                                        children: status\n                                    }),\n                                    /*#__PURE__*/ (0, $ayMG0.jsx)(\"td\", {\n                                        className: \"py-2\",\n                                        children: serverStatus || \"?\"\n                                    })\n                                ]\n                            }, index + mail);\n                        })\n                    })\n                ]\n            })\n        ]\n    });\n};\nvar $a9bd98b75d7ae2c5$export$2e2bcd8739ae039 = $a9bd98b75d7ae2c5$var$AttendanceInjestPage;\n\n});\nparcelRegister(\"br3ru\", function(module, exports) {\n\n$parcel$export(module.exports, \"default\", () => $8534e2e74d4d12c7$export$2e2bcd8739ae039);\nconst $8534e2e74d4d12c7$var$fetchAttendanceData = async (pk)=>{\n    let url = pk ? `/attendance/getAttendance/${pk}/` : getAttendanceURL;\n    try {\n        const response = await fetch(url);\n        if (!response.ok) {\n            alert(\"Failed to fetch course details\");\n            throw new Error(\"Failed to fetch course details\");\n        }\n        const attendanceData = await response.json();\n        const sortByEmail = (a, b)=>a.mail.localeCompare(b.mail);\n        attendanceData[\"all_attendance\"] = attendanceData[\"all_attendance\"].sort(sortByEmail);\n        return attendanceData;\n    } catch (error) {\n        console.error(error);\n        return null;\n    }\n};\nvar $8534e2e74d4d12c7$export$2e2bcd8739ae039 = $8534e2e74d4d12c7$var$fetchAttendanceData;\n\n});\n\nparcelRegister(\"aSXNm\", function(module, exports) {\n\n$parcel$export(module.exports, \"default\", () => $7ecd549f4a83ee09$export$2e2bcd8739ae039);\nfunction $7ecd549f4a83ee09$var$bulkMarkAttendance(pk, data) {\n    const url = `/attendance/v0/builk_mark_attendance/${pk}/`;\n    return new Promise(async (resolve, reject)=>{\n        try {\n            const response = await fetch(url, {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    \"X-CSRFToken\": csrftoken,\n                    mode: \"same-origin\"\n                },\n                body: JSON.stringify(data)\n            });\n            if (response.ok) {\n                const jsonData = await response.json();\n                console.log(`Attendance of ${jsonData[\"mail\"]} marked to ${jsonData[\"status\"]}`);\n                resolve(jsonData);\n            } else reject();\n        } catch (error) {\n            reject({\n                message: error\n            });\n            console.error(\"Error fetching JSON data:\", error);\n        }\n    });\n}\nvar $7ecd549f4a83ee09$export$2e2bcd8739ae039 = $7ecd549f4a83ee09$var$bulkMarkAttendance;\n\n});\n\n\n\n//# sourceMappingURL=AttendanceInjestPage.45b08241.js.map\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSpinner, faUpload } from \"@fortawesome/free-solid-svg-icons\";\nimport fetchAttendanceData from \"../repository/fetchAttendanceData\";\nimport { useParams } from \"react-router-dom\";\nimport bulkMarkAttendance from \"../repository/bulkMarkAttendance\";\nconst StatusToAttendanceMap = {\n  1: \"Present\",\n  0: \"Absent\",\n\n  P: \"Present\",\n  A: \"Absent\",\n  p: \"Present\",\n  a: \"Absent\",\n\n  TRUE: \"Present\",\n  FALSE: \"Absent\",\n};\n\nconst AttendanceInjestPage = () => {\n  const { subjectClassPK } = useParams();\n  const [mailStatus, setMailStatus] = useState([]);\n  const mailInputRef = useRef(null);\n  const attendanceStatusInputRef = useRef(null);\n  const [inputError, setInputError] = useState(\"\");\n  const [uploading, setUploading] = useState(false);\n  const [serverAttendance, setServerAttendance] = useState({});\n\n  async function fetchServerAttendance() {\n    const { all_attendance } = await fetchAttendanceData(subjectClassPK);\n    const attendance = {};\n    for (let { mail, status } of all_attendance) {\n      attendance[mail] = status;\n    }\n    setServerAttendance(attendance);\n    return attendance;\n  }\n\n  useEffect(() => {\n    fetchServerAttendance();\n  }, []);\n\n  async function handelUploadPressed() {\n    setUploading(true);\n    const request = mailStatus.map(({ mail, status }) => {\n      return {\n        mail,\n        status: status.toLowerCase(),\n      };\n    });\n    bulkMarkAttendance(subjectClassPK, request)\n      .then(async () => {\n        setUploading(false);\n        await fetchServerAttendance();\n      })\n      .catch((error) => {\n        console.log(error);\n        setUploading(false);\n      });\n  }\n\n  function createZippedMailStatus(emails, statuses, serverAttendance) {\n    const zipped = emails.map((mail, i) => {\n      mail = mail.replace(\"@ms.sst.scaler.com\", \"@sst.scaler.com\");\n      const status = getStatusFromRaw(statuses[i]);\n      const serverStatus = serverAttendance[mail];\n\n      return { mail, status, serverStatus };\n    });\n    return zipped;\n  }\n\n  function updateFromInput() {\n    const emails = mailInputRef.current.value.trim().split(\"\\n\");\n    const statuses = attendanceStatusInputRef.current.value.trim().split(\"\\n\");\n    if (emails.length !== statuses.length) {\n      setInputError(\"Length mismatch\");\n      return;\n    } else {\n      setInputError(\"\");\n    }\n    if (emails.length === 1 && emails[0] === \"\") {\n      emails.pop();\n      statuses.pop();\n    }\n\n    const zipped = createZippedMailStatus(emails, statuses, serverAttendance);\n\n    setMailStatus(zipped);\n  }\n  useEffect(updateFromInput, [serverAttendance]);\n  function getStatusFromRaw(value) {\n    return StatusToAttendanceMap[value];\n  }\n  function countStatuses() {\n    let presentCount = 0;\n    let absentCount = 0;\n    let unknownCount = 0;\n\n    for (let { status } of mailStatus) {\n      if (status === \"Present\") {\n        presentCount++;\n      } else if (status === \"Absent\") {\n        absentCount++;\n      } else {\n        unknownCount++;\n      }\n    }\n    return { presentCount, absentCount, unknownCount };\n  }\n  const { presentCount, absentCount, unknownCount } = countStatuses();\n  const allKnownMails =\n    mailStatus.filter(({ serverStatus }) => !serverStatus).length === 0;\n\n  const uploadDisabled =\n    uploading ||\n    mailStatus.length === 0 ||\n    inputError.length > 0 ||\n    !allKnownMails;\n\n  return (\n    <div className=\"flex flex-col gap-8 p-8 h-full\">\n      <div className=\"flex justify-evenly h-40\">\n        <textarea\n          ref={mailInputRef}\n          rows={5}\n          className=\"border bg-gray-100 w-2/5\"\n          placeholder=\"Paste emails from gsheet here\"\n          onChange={updateFromInput}\n        />\n        <textarea\n          ref={attendanceStatusInputRef}\n          rows={5}\n          className=\"border bg-gray-100 1/5\"\n          placeholder=\"Paste attendance from gsheet here\"\n          onChange={updateFromInput}\n        />\n        {\n          <div>\n            <button\n              disabled={uploadDisabled}\n              onClick={handelUploadPressed}\n              type=\"button\"\n              className={`px-8 py-3 rounded text-white bg-blue-700 ${\n                !uploadDisabled ? \"hover:bg-blue-800\" : \"bg-gray-500\"\n              }`}\n            >\n              {uploading ? (\n                <FontAwesomeIcon\n                  icon={faSpinner}\n                  spin\n                  size=\"1x\"\n                  color=\"white\"\n                />\n              ) : (\n                <FontAwesomeIcon icon={faUpload} size=\"1x\" color=\"white\" />\n              )}\n              Upload\n            </button>\n          </div>\n        }\n      </div>\n      {inputError && <div className=\"text-red-500\">{inputError}</div>}\n\n      <table className=\"w-full mt-8 text-left bg-white border border-gray-300\">\n        <thead className=\"bg-gray-200\">\n          <tr className=\"[&>*]:py-2\">\n            <th>#</th>\n            <th>Emails: ({mailStatus.length})</th>\n            <th className=\"flex flex-col\">\n              <span>Attendances: ({mailStatus.length})</span>\n              <div className=\"flex flex-wrap gap-4\">\n                <span>{presentCount} Present</span>\n                <span>{absentCount} Absent</span>\n                {unknownCount > 0 && <span>{unknownCount} Unknown</span>}\n              </div>\n            </th>\n            <th>Server Status</th>\n          </tr>\n        </thead>\n        <tbody className=\"overflow-y-auto\">\n          {mailStatus.map(({ mail, status, serverStatus }, index) => {\n            let style = index % 2 === 0 ? \"bg-gray-100\" : \"bg-white\";\n            if (!serverStatus) {\n              style = \"bg-red-400\";\n            } else if (status === serverStatus) {\n              style = \"bg-green-400\";\n            } else {\n              style = \"bg-yellow-400\";\n            }\n\n            return (\n              <tr className={style} key={index + mail}>\n                <td>{index + 1}</td>\n                <td className=\"py-2\">{mail}</td>\n                <td className=\"py-2\">{status}</td>\n                <td className=\"py-2\">{serverStatus || \"?\"}</td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </div>\n  );\n};\nexport default AttendanceInjestPage;\n","const fetchAttendanceData = async (pk) => {\n  let url = pk ? `/attendance/getAttendance/${pk}/` : getAttendanceURL;\n  try {\n    const response = await fetch(url);\n    if (!response.ok) {\n      alert(\"Failed to fetch course details\");\n      throw new Error(\"Failed to fetch course details\");\n    }\n    const attendanceData = await response.json();\n\n    const sortByEmail = (a, b) => a.mail.localeCompare(b.mail);\n    attendanceData[\"all_attendance\"] =\n      attendanceData[\"all_attendance\"].sort(sortByEmail);\n    return attendanceData;\n  } catch (error) {\n    console.error(error);\n    return null;\n  }\n};\n\nexport default fetchAttendanceData;\n","function bulkMarkAttendance(pk, data) {\n  const url = `/attendance/v0/builk_mark_attendance/${pk}/`;\n  return new Promise(async (resolve, reject) => {\n    try {\n      const response = await fetch(url, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"X-CSRFToken\": csrftoken,\n          mode: \"same-origin\",\n        },\n        body: JSON.stringify(data),\n      });\n\n      if (response.ok) {\n        const jsonData = await response.json();\n\n        console.log(\n          `Attendance of ${jsonData[\"mail\"]} marked to ${jsonData[\"status\"]}`,\n        );\n        resolve(jsonData);\n      } else {\n        reject();\n      }\n    } catch (error) {\n      reject({ message: error });\n      console.error(\"Error fetching JSON data:\", error);\n    }\n  });\n}\n\nexport default bulkMarkAttendance;\n"],"names":["$parcel$export","e","n","v","s","Object","defineProperty","get","set","enumerable","configurable","parcelRequire","$parcel$global","globalThis","parcelRegister","register","module","exports","value","$a9bd98b75d7ae2c5$export$2e2bcd8739ae039","$ayMG0","$acw62","$jEyqx","$8Qx3l","$br3ru","$aphAM","$aSXNm","$a9bd98b75d7ae2c5$var$StatusToAttendanceMap","P","A","p","a","TRUE","FALSE","subjectClassPK","useParams","mailStatus","setMailStatus","useState","mailInputRef","useRef","attendanceStatusInputRef","inputError","setInputError","uploading","setUploading","serverAttendance","setServerAttendance","fetchServerAttendance","all_attendance","default","attendance","mail","status","handelUploadPressed","request","map","toLowerCase","then","catch","error","console","log","updateFromInput","emails","current","trim","split","statuses","length","pop","i","replace","serverStatus","useEffect","presentCount","absentCount","unknownCount","countStatuses","allKnownMails","filter","uploadDisabled","jsxs","className","children","jsx","ref","rows","placeholder","onChange","disabled","onClick","type","FontAwesomeIcon","icon","faSpinner","spin","size","color","faUpload","index","style","$8534e2e74d4d12c7$export$2e2bcd8739ae039","pk","url","getAttendanceURL","response","fetch","ok","alert","Error","attendanceData","json","sort","b","localeCompare","$7ecd549f4a83ee09$export$2e2bcd8739ae039","data","Promise","resolve","reject","method","headers","csrftoken","mode","body","JSON","stringify","jsonData","message"],"version":3,"file":"AttendanceInjestPage.45b08241.js.map"}